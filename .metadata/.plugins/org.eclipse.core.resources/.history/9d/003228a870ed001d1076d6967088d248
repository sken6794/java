package day14.api.ramda.stream;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import java.util.Set;
import java.util.stream.Collector;
import java.util.stream.Collectors;

public class MainClass3 {
	public static void main(String[] args) {

		List<Integer> list = new ArrayList<>();

		Random ran = new Random();

		for(int i = 0; i<15; i++) {

			list.add(ran.nextInt(1,15));
		}
		
		//최종집계 함수
		//collect() 
		
		List<Integer> newList = list.stream().filter(a -> a%3==0).collect(Collectors.toList());
		
		System.out.println(newList.toString());
		Set<Integer> setLi = list.stream().filter(a -> a%3==0).collect(Collectors.toSet());
		System.out.println(setLi.toString());
		
		System.out.println("==============================================================");
		//sum(), count(), avg(), max(), min(), reduce() - 숫자를 다루는 스트림에서만 사용

		int b= list.stream().distinct().mapToInt(a->a).sum();
		System.out.println(b);
		
		System.out.println(Arrays.toString(list.stream().distinct().mapToInt(a->a).toArray()));
		
		long r = list.stream().distinct().mapToInt(a->a).count();
		System.out.println(r);
		
		list.stream().distinct().mapToInt(a->a).average();
		
		
		
		
		
		
		
		
		
		
		
	}
}










